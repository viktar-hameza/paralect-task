import React from 'react';
import Cookie from 'js-cookie';
import Head from 'next/head';
import { Inter } from 'next/font/google';

import { FavoritesList } from '@/features/favorites/components/FavoritesList';
import {
  getVacancies,
  DEFAULT_SEARCH_PARAMS,
} from '@/features/shared/api/superjob/hooks';

const inter = Inter({ subsets: ['latin'] });

import {
  dehydrate,
  QueryClient,
  DehydratedState,
  useQuery,
} from '@tanstack/react-query';
import { GetServerSideProps } from 'next';

export const getServerSideProps: GetServerSideProps<{
  dehydratedState: DehydratedState;
}> = async ({ req }) => {
  const isFirstServerCall = !req?.url?.startsWith('/_next/data/');
  const favoritesFromCookie = JSON.parse(
    req.cookies.favorites || '[]'
  ) as Array<number>;
  const queryClient = new QueryClient();

  if (isFirstServerCall) {
    await queryClient.prefetchQuery(
      ['vacancies', { ids: favoritesFromCookie, ...DEFAULT_SEARCH_PARAMS }],
      () => getVacancies({ ids: favoritesFromCookie, ...DEFAULT_SEARCH_PARAMS })
    );
  }

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};

export function Page() {
  const [isReady, setIsReady] = React.useState(false);
  const [favorites, setFavorites] = React.useState<Array<number>>([]);

  React.useEffect(() => {
    const favoritesFromCookie = JSON.parse(Cookie.get('favorites') || '[]');
    setFavorites(favoritesFromCookie);
    setIsReady(true);
  }, []);

  const filters = React.useMemo(() => ({ ids: favorites }), [favorites]);

  return (
    <>
      <Head>
        <title>Superjob - Favorites</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      {isReady && <FavoritesList filters={filters} />}
    </>
  );
}
